# -*- coding: utf-8 -*-
"""04_Analyzing Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1b-6mODAm7N81cNSDWbYdxmA3NQGIW_Fe
"""

import pandas as pd

!pip install datasets

from datasets import load_dataset

data = load_dataset('lukebarousse/data_jobs')

df = data['train'].to_pandas()

df['job_posted_date'] = pd.to_datetime(df.job_posted_date)

df.info()

df['job_posting_month'] = df.job_posted_date.dt.month

df.count()

"""**Analying missing value**"""

df[df.job_title.isna()]

df[(df.job_title_short == 'Data Engineer') & (df.job_via == 'via Jobs In France - Mustakbil.com') & (df.search_location == 'Saint Lucia')]

df = df.dropna(subset = "job_title")

df.info()

df.describe()

df.salary_year_avg.min()

"""Index value"""



min_salary = df.salary_year_avg.idxmin()

df[df.index == 665729]

df.iloc[min_salary]

df['job_title_short'].unique()

df['job_title_short'].value_counts()

df.groupby('job_title_short')['salary_year_avg'].min()

df.groupby('job_title_short')['salary_year_avg'].median()

df.groupby(['job_title_short','job_country'])['salary_year_avg'].median()

df.groupby(['job_title_short'])['salary_year_avg'].agg(['min','max'])

"""## Analyze Data salary of Australia"""

df.job_country.value_counts().head(20)

Aus_Job = df[df.job_country == 'Australia']

Aus_Job.info()

Aus_Job[Aus_Job['salary_year_avg'].notna()]

SeniordatascientAUS = Aus_Job[(Aus_Job['job_title_short'] == 'Senior Data Scientist') & (Aus_Job['job_location'] == 'Melbourne VIC, Australia') & (Aus_Job['job_schedule_type'] == 'Full-time')& (Aus_Job['salary_year_avg'].notna())]['salary_year_avg'].unique()

SeniordatascientAUS[0]

Aus_Job.loc[
    (Aus_Job['job_title_short'] == 'Senior Data Scientist') &
    (Aus_Job['job_location'] == 'Melbourne VIC, Australia') &
    (Aus_Job['job_schedule_type'] == 'Full-time') &
    (Aus_Job['salary_year_avg'].isna()),
    'salary_year_avg'
] = SeniordatascientAUS[0]

Aus_Job[(Aus_Job['job_title_short'] == 'Senior Data Scientist') & (Aus_Job['job_location'] == 'Melbourne VIC, Australia') & (Aus_Job['job_schedule_type'] == 'Full-time')& (Aus_Job['salary_year_avg'].isna())]

Aus_Job.info()

aus_jobs = Aus_Job[Aus_Job.salary_year_avg.notna()]

aus_jobs.groupby('job_title_short')['salary_year_avg'].agg(['min','max','median','mean']).sort_values(by = 'median',ascending = False)